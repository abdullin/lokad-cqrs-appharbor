<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{96E3B247-C04C-4138-A042-7969562B4B0F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Lokad.Cqrs</RootNamespace>
    <AssemblyName>Lokad.Cqrs.Portable.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="nunit.framework, Version=2.5.10.11092, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Library\NUnit\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="protobuf-net, Version=2.0.0.470, Culture=neutral, PublicKeyToken=257b51d87d2e4d67, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Library\ProtoBuf-net\protobuf-net.dll</HintPath>
    </Reference>
    <Reference Include="ServiceStack.Text, Version=2.2.6.33214, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Library\ServiceStack\ServiceStack.Text.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Transactions" />
    <Reference Include="System.XML" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Core.Envelope\Scenarios\EnvelopeSerializerWithServiceStackJSON.cs" />
    <Compile Include="Feature.AtomicStorage\Given_Atomic_Storage.cs" />
    <Compile Include="Feature.AtomicStorage\Given_Atomic_Storage_With_Files.cs" />
    <Compile Include="Feature.AtomicStorage\Give_Atomic_Storage_With_Memory.cs" />
    <Compile Include="Feature.AtomicStorage\Stand_alone_tests.cs" />
    <Compile Include="Documentation_sample.cs" />
    <Compile Include="Feature.AtomicStorage\Given_Atomic_Scenarios_When_Files.cs" />
    <Compile Include="Feature.AtomicStorage\Syntax_verification.cs" />
    <Compile Include="Core.Envelope\Play_all_for_DataContracts.cs" />
    <Compile Include="Core.Envelope\Play_all_for_Memory.cs" />
    <Compile Include="Core.Envelope\Scenarios\DataSerializerWithBinaryFormatter.cs" />
    <Compile Include="Core.Envelope\Scenarios\When_envelope_is_serialized.cs" />
    <Compile Include="Core.Envelope\Scenarios\EnvelopeSerializerWithBinaryFormatter.cs" />
    <Compile Include="Core.Envelope\Play_all_for_BinaryFormatter.cs" />
    <Compile Include="ExtendOptional.cs" />
    <Compile Include="Feature.AtomicStorage\Engine_scenario_for_custom_view_domain.cs" />
    <Compile Include="Feature.AtomicStorage\Given_Atomic_Scenarios_When_Memory.cs" />
    <Compile Include="TestStrategy.cs" />
    <Compile Include="Feature.StreamingStorage\Scenarios\When_listing_items_in.cs" />
    <Compile Include="Feature.TapeStorage\FileTapeStorageTests.cs" />
    <Compile Include="Feature.TapeStorage\MemoryTapeStorageTests.cs" />
    <Compile Include="Feature.TapeStorage\TapeStorageTests.cs" />
    <Compile Include="Feature.AtomicStorage\Given_Atomic_Scenarios.cs" />
    <Compile Include="Feature.StreamingStorage\Run_all_StreamingStorage_scenarios_for_Files.cs" />
    <Compile Include="Feature.StreamingStorage\Scenarios\ITestStorage.cs" />
    <Compile Include="Feature.StreamingStorage\Scenarios\StorageItemFixture.cs" />
    <Compile Include="Feature.StreamingStorage\Scenarios\When_checking_item_in.cs" />
    <Compile Include="Feature.StreamingStorage\Scenarios\When_copying_items_in.cs" />
    <Compile Include="Feature.StreamingStorage\Scenarios\When_deleting_item_in.cs" />
    <Compile Include="Feature.StreamingStorage\Scenarios\When_reading_item_in.cs" />
    <Compile Include="Feature.StreamingStorage\Scenarios\When_writing_item_in.cs" />
    <Compile Include="BasicEngineConfigurationTests.cs" />
    <Compile Include="Synthetic\Given_duplicate_configuration.cs" />
    <Compile Include="Synthetic\Given_Basic_Scenarios.cs" />
    <Compile Include="Synthetic\Given_Basic_Scenarios_When_Files.cs" />
    <Compile Include="Synthetic\Given_Basic_Scenarios_When_Memory.cs" />
    <Compile Include="Synthetic\Given_Tx_Scenarios.cs" />
    <Compile Include="Synthetic\Given_Tx_Scenarios_When_Files.cs" />
    <Compile Include="Synthetic\Given_Tx_Scenarios_When_Memory.cs" />
    <Compile Include="Synthetic\TransactionTester.cs" />
    <Compile Include="TestObserver.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Cqrs.Portable\Cqrs.Portable.csproj">
      <Project>{4E2E749C-4D6F-4EF8-8E9D-96D467306997}</Project>
      <Name>Cqrs.Portable</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>